// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfferManagement.Infrastructure.Persistence;

#nullable disable

namespace OfferManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OfferManagement.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Toyota",
                            Model = "Camry",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Toyota",
                            Model = "RAV4",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            Brand = "BMW",
                            Model = "X5",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 4,
                            Brand = "BMW",
                            Model = "3 Series",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Mercedes-Benz",
                            Model = "E-Class",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Audi",
                            Model = "A6",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Audi",
                            Model = "Q7",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Hyundai",
                            Model = "Solaris",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Kia",
                            Model = "Rio",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Volkswagen",
                            Model = "Tiguan",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Volkswagen",
                            Model = "Polo",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Skoda",
                            Model = "Octavia",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Lada",
                            Model = "Vesta",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Lada",
                            Model = "Granta",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Ford",
                            Model = "Focus",
                            RegisteredAt = new DateTime(2025, 7, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("OfferManagement.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Major Auto"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Avilon"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rolf"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "AutoSpecCenter"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Inchcape"
                        });
                });

            modelBuilder.Entity("OfferManagement.Domain.Entities.Offer", b =>
                {
                    b.HasOne("OfferManagement.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Offers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OfferManagement.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
